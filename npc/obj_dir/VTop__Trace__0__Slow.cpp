// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Tracing implementation internals
#include "verilated_vcd_c.h"
#include "VTop__Syms.h"


VL_ATTR_COLD void VTop___024root__trace_init_sub__TOP__0(VTop___024root* vlSelf, VerilatedVcd* tracep) {
    if (false && vlSelf) {}  // Prevent unused
    VTop__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+    VTop___024root__trace_init_sub__TOP__0\n"); );
    // Init
    const int c = vlSymsp->__Vm_baseCode;
    // Body
    tracep->declBit(c+169,"clock", false,-1);
    tracep->declBit(c+170,"reset", false,-1);
    tracep->declBus(c+171,"io_fs_pc", false,-1, 31,0);
    tracep->declBus(c+172,"io_op", false,-1, 6,0);
    tracep->declBit(c+173,"io_in_WB", false,-1);
    tracep->declBus(c+174,"io_wb_pc", false,-1, 31,0);
    tracep->declBus(c+175,"io_wb_inst", false,-1, 31,0);
    tracep->declBus(c+176,"io_ds_pc", false,-1, 31,0);
    tracep->declBit(c+177,"io_clock", false,-1);
    tracep->declQuad(c+178,"io_mem_result", false,-1, 63,0);
    tracep->declBus(c+180,"io_ld_type", false,-1, 2,0);
    tracep->pushNamePrefix("Top ");
    tracep->declBit(c+169,"clock", false,-1);
    tracep->declBit(c+170,"reset", false,-1);
    tracep->declBus(c+171,"io_fs_pc", false,-1, 31,0);
    tracep->declBus(c+172,"io_op", false,-1, 6,0);
    tracep->declBit(c+173,"io_in_WB", false,-1);
    tracep->declBus(c+174,"io_wb_pc", false,-1, 31,0);
    tracep->declBus(c+175,"io_wb_inst", false,-1, 31,0);
    tracep->declBus(c+176,"io_ds_pc", false,-1, 31,0);
    tracep->declBit(c+177,"io_clock", false,-1);
    tracep->declQuad(c+178,"io_mem_result", false,-1, 63,0);
    tracep->declBus(c+180,"io_ld_type", false,-1, 2,0);
    tracep->declBit(c+169,"ifu_clock", false,-1);
    tracep->declBit(c+170,"ifu_reset", false,-1);
    tracep->declBus(c+171,"ifu_io_fd_bus_pc", false,-1, 31,0);
    tracep->declQuad(c+185,"ifu_io_br_bus_csr_rdata", false,-1, 63,0);
    tracep->declBit(c+187,"ifu_io_br_bus_eval", false,-1);
    tracep->declBit(c+187,"ifu_io_br_bus_mret", false,-1);
    tracep->declBit(c+169,"idu_clock", false,-1);
    tracep->declBus(c+188,"idu_io_de_bus_OP", false,-1, 7,0);
    tracep->declBus(c+189,"idu_io_de_bus_csr_raddr", false,-1, 2,0);
    tracep->declBit(c+187,"idu_io_de_bus_csr_ren", false,-1);
    tracep->declQuad(c+185,"idu_io_br_bus_csr_rdata", false,-1, 63,0);
    tracep->declBit(c+187,"idu_io_br_bus_eval", false,-1);
    tracep->declBit(c+187,"idu_io_br_bus_mret", false,-1);
    tracep->declQuad(c+181,"mem_io_data_sram_rdata", false,-1, 63,0);
    tracep->declQuad(c+178,"mem_io_mem_result", false,-1, 63,0);
    tracep->declBus(c+189,"mem_io_ld_type", false,-1, 2,0);
    tracep->declQuad(c+185,"dpi_rf_0", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_1", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_2", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_3", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_4", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_5", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_6", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_7", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_8", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_9", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_10", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_11", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_12", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_13", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_14", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_15", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_16", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_17", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_18", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_19", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_20", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_21", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_22", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_23", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_24", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_25", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_26", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_27", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_28", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_29", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_30", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_rf_31", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_csr_0", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_csr_1", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_csr_2", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_csr_3", false,-1, 63,0);
    tracep->declQuad(c+185,"dpi_csr_4", false,-1, 63,0);
    tracep->declBus(c+190,"dpi_inst", false,-1, 31,0);
    tracep->declQuad(c+185,"dpi_pc", false,-1, 63,0);
    tracep->declBus(c+190,"dpi_eval", false,-1, 31,0);
    tracep->declBit(c+169,"axi_clock", false,-1);
    tracep->declBit(c+170,"axi_reset", false,-1);
    tracep->declBit(c+1,"axi_io_arvalid", false,-1);
    tracep->declBit(c+160,"axi_io_arready", false,-1);
    tracep->declQuad(c+181,"axi_io_rdata", false,-1, 63,0);
    tracep->declBit(c+161,"axi_io_rvalid", false,-1);
    tracep->declBit(c+2,"axi_io_rready", false,-1);
    tracep->declBit(c+3,"axi_io_awvalid", false,-1);
    tracep->declBit(c+162,"axi_io_awready", false,-1);
    tracep->declBit(c+4,"axi_io_wvalid", false,-1);
    tracep->declBit(c+163,"axi_io_wready", false,-1);
    tracep->declBit(c+163,"axi_io_bvalid", false,-1);
    tracep->declBit(c+5,"axi_io_bready", false,-1);
    tracep->declQuad(c+181,"axi_io_data_sram_rdata", false,-1, 63,0);
    tracep->declBit(c+177,"axi_mem_clock", false,-1);
    tracep->declBus(c+191,"axi_mem_arid", false,-1, 3,0);
    tracep->declQuad(c+185,"axi_mem_araddr", false,-1, 63,0);
    tracep->declBit(c+1,"axi_mem_arvalid", false,-1);
    tracep->declBit(c+160,"axi_mem_arready", false,-1);
    tracep->declQuad(c+181,"axi_mem_rdata", false,-1, 63,0);
    tracep->declBit(c+161,"axi_mem_rvalid", false,-1);
    tracep->declBit(c+2,"axi_mem_rready", false,-1);
    tracep->declBus(c+192,"axi_mem_awid", false,-1, 3,0);
    tracep->declQuad(c+185,"axi_mem_awaddr", false,-1, 63,0);
    tracep->declBit(c+3,"axi_mem_awvalid", false,-1);
    tracep->declBit(c+162,"axi_mem_awready", false,-1);
    tracep->declQuad(c+185,"axi_mem_wdata", false,-1, 63,0);
    tracep->declBus(c+193,"axi_mem_wstrb", false,-1, 7,0);
    tracep->declBit(c+4,"axi_mem_wvalid", false,-1);
    tracep->declBit(c+163,"axi_mem_wready", false,-1);
    tracep->declBit(c+163,"axi_mem_bvalid", false,-1);
    tracep->declBit(c+5,"axi_mem_bready", false,-1);
    tracep->pushNamePrefix("axi ");
    tracep->declBit(c+169,"clock", false,-1);
    tracep->declBit(c+170,"reset", false,-1);
    tracep->declBit(c+1,"io_arvalid", false,-1);
    tracep->declBit(c+160,"io_arready", false,-1);
    tracep->declQuad(c+181,"io_rdata", false,-1, 63,0);
    tracep->declBit(c+161,"io_rvalid", false,-1);
    tracep->declBit(c+2,"io_rready", false,-1);
    tracep->declBit(c+3,"io_awvalid", false,-1);
    tracep->declBit(c+162,"io_awready", false,-1);
    tracep->declBit(c+4,"io_wvalid", false,-1);
    tracep->declBit(c+163,"io_wready", false,-1);
    tracep->declBit(c+163,"io_bvalid", false,-1);
    tracep->declBit(c+5,"io_bready", false,-1);
    tracep->declQuad(c+181,"io_data_sram_rdata", false,-1, 63,0);
    tracep->declBus(c+6,"rstate", false,-1, 1,0);
    tracep->declBus(c+7,"wstate", false,-1, 1,0);
    tracep->declBit(c+8,"write_init", false,-1);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("axi_mem ");
    tracep->declBit(c+177,"clock", false,-1);
    tracep->declBus(c+191,"arid", false,-1, 3,0);
    tracep->declQuad(c+185,"araddr", false,-1, 63,0);
    tracep->declBit(c+1,"arvalid", false,-1);
    tracep->declBit(c+160,"arready", false,-1);
    tracep->declQuad(c+181,"rdata", false,-1, 63,0);
    tracep->declBit(c+161,"rvalid", false,-1);
    tracep->declBit(c+2,"rready", false,-1);
    tracep->declBus(c+192,"awid", false,-1, 3,0);
    tracep->declQuad(c+185,"awaddr", false,-1, 63,0);
    tracep->declBit(c+3,"awvalid", false,-1);
    tracep->declBit(c+162,"awready", false,-1);
    tracep->declQuad(c+185,"wdata", false,-1, 63,0);
    tracep->declBus(c+193,"wstrb", false,-1, 7,0);
    tracep->declBit(c+4,"wvalid", false,-1);
    tracep->declBit(c+163,"wready", false,-1);
    tracep->declBit(c+163,"bvalid", false,-1);
    tracep->declBit(c+5,"bready", false,-1);
    tracep->declBus(c+194,"READ_AINIT", false,-1, 2,0);
    tracep->declBus(c+195,"READ_ARADDR", false,-1, 2,0);
    tracep->declBus(c+196,"READ_RDATA", false,-1, 2,0);
    tracep->declBus(c+164,"read_state", false,-1, 2,0);
    tracep->declBus(c+183,"read_next_state", false,-1, 2,0);
    tracep->declBit(c+165,"read_ainit", false,-1);
    tracep->declBit(c+160,"read_araddr", false,-1);
    tracep->declBit(c+161,"read_rdata", false,-1);
    tracep->declBus(c+194,"WRITE_AINIT", false,-1, 2,0);
    tracep->declBus(c+195,"WRITE_AWADDR", false,-1, 2,0);
    tracep->declBus(c+196,"WRITE_WDATA", false,-1, 2,0);
    tracep->declBus(c+197,"WRITE_BRESP", false,-1, 2,0);
    tracep->declBus(c+166,"write_state", false,-1, 2,0);
    tracep->declBus(c+184,"write_next_state", false,-1, 2,0);
    tracep->declBit(c+167,"write_ainit", false,-1);
    tracep->declBit(c+162,"write_awaddr", false,-1);
    tracep->declBit(c+168,"write_wdata", false,-1);
    tracep->declBit(c+163,"write_bresp", false,-1);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("dpi ");
    tracep->declQuad(c+185,"rf_0", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_1", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_2", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_3", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_4", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_5", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_6", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_7", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_8", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_9", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_10", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_11", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_12", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_13", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_14", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_15", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_16", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_17", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_18", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_19", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_20", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_21", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_22", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_23", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_24", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_25", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_26", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_27", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_28", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_29", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_30", false,-1, 63,0);
    tracep->declQuad(c+185,"rf_31", false,-1, 63,0);
    tracep->declQuad(c+185,"csr_0", false,-1, 63,0);
    tracep->declQuad(c+185,"csr_1", false,-1, 63,0);
    tracep->declQuad(c+185,"csr_2", false,-1, 63,0);
    tracep->declQuad(c+185,"csr_3", false,-1, 63,0);
    tracep->declQuad(c+185,"csr_4", false,-1, 63,0);
    tracep->declQuad(c+185,"inst", false,-1, 63,0);
    tracep->declQuad(c+185,"pc", false,-1, 63,0);
    tracep->declBit(c+187,"eval", false,-1);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("idu ");
    tracep->declBit(c+169,"clock", false,-1);
    tracep->declBus(c+188,"io_de_bus_OP", false,-1, 7,0);
    tracep->declBus(c+189,"io_de_bus_csr_raddr", false,-1, 2,0);
    tracep->declBit(c+187,"io_de_bus_csr_ren", false,-1);
    tracep->declQuad(c+185,"io_br_bus_csr_rdata", false,-1, 63,0);
    tracep->declBit(c+187,"io_br_bus_eval", false,-1);
    tracep->declBit(c+187,"io_br_bus_mret", false,-1);
    tracep->declBit(c+169,"Registers_clock", false,-1);
    tracep->declBus(c+198,"Registers_io_rs1", false,-1, 4,0);
    tracep->declQuad(c+9,"Registers_io_regs_0", false,-1, 63,0);
    tracep->declQuad(c+11,"Registers_io_regs_1", false,-1, 63,0);
    tracep->declQuad(c+13,"Registers_io_regs_2", false,-1, 63,0);
    tracep->declQuad(c+15,"Registers_io_regs_3", false,-1, 63,0);
    tracep->declQuad(c+17,"Registers_io_regs_4", false,-1, 63,0);
    tracep->declQuad(c+19,"Registers_io_regs_5", false,-1, 63,0);
    tracep->declQuad(c+21,"Registers_io_regs_6", false,-1, 63,0);
    tracep->declQuad(c+23,"Registers_io_regs_7", false,-1, 63,0);
    tracep->declQuad(c+25,"Registers_io_regs_8", false,-1, 63,0);
    tracep->declQuad(c+27,"Registers_io_regs_9", false,-1, 63,0);
    tracep->declQuad(c+29,"Registers_io_regs_10", false,-1, 63,0);
    tracep->declQuad(c+31,"Registers_io_regs_11", false,-1, 63,0);
    tracep->declQuad(c+33,"Registers_io_regs_12", false,-1, 63,0);
    tracep->declQuad(c+35,"Registers_io_regs_13", false,-1, 63,0);
    tracep->declQuad(c+37,"Registers_io_regs_14", false,-1, 63,0);
    tracep->declQuad(c+39,"Registers_io_regs_15", false,-1, 63,0);
    tracep->declQuad(c+41,"Registers_io_regs_16", false,-1, 63,0);
    tracep->declQuad(c+43,"Registers_io_regs_17", false,-1, 63,0);
    tracep->declQuad(c+45,"Registers_io_regs_18", false,-1, 63,0);
    tracep->declQuad(c+47,"Registers_io_regs_19", false,-1, 63,0);
    tracep->declQuad(c+49,"Registers_io_regs_20", false,-1, 63,0);
    tracep->declQuad(c+51,"Registers_io_regs_21", false,-1, 63,0);
    tracep->declQuad(c+53,"Registers_io_regs_22", false,-1, 63,0);
    tracep->declQuad(c+55,"Registers_io_regs_23", false,-1, 63,0);
    tracep->declQuad(c+57,"Registers_io_regs_24", false,-1, 63,0);
    tracep->declQuad(c+59,"Registers_io_regs_25", false,-1, 63,0);
    tracep->declQuad(c+61,"Registers_io_regs_26", false,-1, 63,0);
    tracep->declQuad(c+63,"Registers_io_regs_27", false,-1, 63,0);
    tracep->declQuad(c+65,"Registers_io_regs_28", false,-1, 63,0);
    tracep->declQuad(c+67,"Registers_io_regs_29", false,-1, 63,0);
    tracep->declQuad(c+69,"Registers_io_regs_30", false,-1, 63,0);
    tracep->declQuad(c+71,"Registers_io_regs_31", false,-1, 63,0);
    tracep->declBus(c+190,"DPI_EBREAK_flag", false,-1, 31,0);
    tracep->declBit(c+169,"CSR_clock", false,-1);
    tracep->declBit(c+187,"CSR_io_ren", false,-1);
    tracep->declQuad(c+185,"CSR_io_rdata", false,-1, 63,0);
    tracep->declBus(c+198,"CSR_io_raddr", false,-1, 4,0);
    tracep->declQuad(c+73,"CSR_io_csrs_0", false,-1, 63,0);
    tracep->declQuad(c+75,"CSR_io_csrs_1", false,-1, 63,0);
    tracep->declQuad(c+77,"CSR_io_csrs_2", false,-1, 63,0);
    tracep->declQuad(c+79,"CSR_io_csrs_3", false,-1, 63,0);
    tracep->declQuad(c+81,"CSR_io_csrs_4", false,-1, 63,0);
    tracep->declQuad(c+9,"dpi_rf_0", false,-1, 63,0);
    tracep->declQuad(c+11,"dpi_rf_1", false,-1, 63,0);
    tracep->declQuad(c+13,"dpi_rf_2", false,-1, 63,0);
    tracep->declQuad(c+15,"dpi_rf_3", false,-1, 63,0);
    tracep->declQuad(c+17,"dpi_rf_4", false,-1, 63,0);
    tracep->declQuad(c+19,"dpi_rf_5", false,-1, 63,0);
    tracep->declQuad(c+21,"dpi_rf_6", false,-1, 63,0);
    tracep->declQuad(c+23,"dpi_rf_7", false,-1, 63,0);
    tracep->declQuad(c+25,"dpi_rf_8", false,-1, 63,0);
    tracep->declQuad(c+27,"dpi_rf_9", false,-1, 63,0);
    tracep->declQuad(c+29,"dpi_rf_10", false,-1, 63,0);
    tracep->declQuad(c+31,"dpi_rf_11", false,-1, 63,0);
    tracep->declQuad(c+33,"dpi_rf_12", false,-1, 63,0);
    tracep->declQuad(c+35,"dpi_rf_13", false,-1, 63,0);
    tracep->declQuad(c+37,"dpi_rf_14", false,-1, 63,0);
    tracep->declQuad(c+39,"dpi_rf_15", false,-1, 63,0);
    tracep->declQuad(c+41,"dpi_rf_16", false,-1, 63,0);
    tracep->declQuad(c+43,"dpi_rf_17", false,-1, 63,0);
    tracep->declQuad(c+45,"dpi_rf_18", false,-1, 63,0);
    tracep->declQuad(c+47,"dpi_rf_19", false,-1, 63,0);
    tracep->declQuad(c+49,"dpi_rf_20", false,-1, 63,0);
    tracep->declQuad(c+51,"dpi_rf_21", false,-1, 63,0);
    tracep->declQuad(c+53,"dpi_rf_22", false,-1, 63,0);
    tracep->declQuad(c+55,"dpi_rf_23", false,-1, 63,0);
    tracep->declQuad(c+57,"dpi_rf_24", false,-1, 63,0);
    tracep->declQuad(c+59,"dpi_rf_25", false,-1, 63,0);
    tracep->declQuad(c+61,"dpi_rf_26", false,-1, 63,0);
    tracep->declQuad(c+63,"dpi_rf_27", false,-1, 63,0);
    tracep->declQuad(c+65,"dpi_rf_28", false,-1, 63,0);
    tracep->declQuad(c+67,"dpi_rf_29", false,-1, 63,0);
    tracep->declQuad(c+69,"dpi_rf_30", false,-1, 63,0);
    tracep->declQuad(c+71,"dpi_rf_31", false,-1, 63,0);
    tracep->declQuad(c+73,"dpi_csr_0", false,-1, 63,0);
    tracep->declQuad(c+75,"dpi_csr_1", false,-1, 63,0);
    tracep->declQuad(c+77,"dpi_csr_2", false,-1, 63,0);
    tracep->declQuad(c+79,"dpi_csr_3", false,-1, 63,0);
    tracep->declQuad(c+81,"dpi_csr_4", false,-1, 63,0);
    tracep->declBus(c+190,"dpi_inst", false,-1, 31,0);
    tracep->declQuad(c+185,"dpi_pc", false,-1, 63,0);
    tracep->declBus(c+190,"dpi_eval", false,-1, 31,0);
    tracep->declBit(c+187,"eval", false,-1);
    tracep->declBit(c+187,"mret", false,-1);
    tracep->pushNamePrefix("CSR ");
    tracep->declBit(c+169,"clock", false,-1);
    tracep->declBit(c+187,"io_ren", false,-1);
    tracep->declQuad(c+185,"io_rdata", false,-1, 63,0);
    tracep->declBus(c+198,"io_raddr", false,-1, 4,0);
    tracep->declQuad(c+73,"io_csrs_0", false,-1, 63,0);
    tracep->declQuad(c+75,"io_csrs_1", false,-1, 63,0);
    tracep->declQuad(c+77,"io_csrs_2", false,-1, 63,0);
    tracep->declQuad(c+79,"io_csrs_3", false,-1, 63,0);
    tracep->declQuad(c+81,"io_csrs_4", false,-1, 63,0);
    for (int i = 0; i < 5; ++i) {
        tracep->declQuad(c+83+i*2,"csr", true,(i+0), 63,0);
    }
    tracep->declBit(c+199,"csr_io_rdata_MPORT_en", false,-1);
    tracep->declBus(c+189,"csr_io_rdata_MPORT_addr", false,-1, 2,0);
    tracep->declQuad(c+73,"csr_io_rdata_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"csr_MPORT_1_en", false,-1);
    tracep->declBus(c+189,"csr_MPORT_1_addr", false,-1, 2,0);
    tracep->declQuad(c+73,"csr_MPORT_1_data", false,-1, 63,0);
    tracep->declBit(c+199,"csr_MPORT_3_en", false,-1);
    tracep->declBus(c+189,"csr_MPORT_3_addr", false,-1, 2,0);
    tracep->declQuad(c+73,"csr_MPORT_3_data", false,-1, 63,0);
    tracep->declBit(c+199,"csr_io_csrs_0_MPORT_en", false,-1);
    tracep->declBus(c+189,"csr_io_csrs_0_MPORT_addr", false,-1, 2,0);
    tracep->declQuad(c+73,"csr_io_csrs_0_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"csr_io_csrs_1_MPORT_en", false,-1);
    tracep->declBus(c+194,"csr_io_csrs_1_MPORT_addr", false,-1, 2,0);
    tracep->declQuad(c+75,"csr_io_csrs_1_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"csr_io_csrs_2_MPORT_en", false,-1);
    tracep->declBus(c+195,"csr_io_csrs_2_MPORT_addr", false,-1, 2,0);
    tracep->declQuad(c+77,"csr_io_csrs_2_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"csr_io_csrs_3_MPORT_en", false,-1);
    tracep->declBus(c+196,"csr_io_csrs_3_MPORT_addr", false,-1, 2,0);
    tracep->declQuad(c+79,"csr_io_csrs_3_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"csr_io_csrs_4_MPORT_en", false,-1);
    tracep->declBus(c+197,"csr_io_csrs_4_MPORT_addr", false,-1, 2,0);
    tracep->declQuad(c+81,"csr_io_csrs_4_MPORT_data", false,-1, 63,0);
    tracep->declQuad(c+73,"csr_MPORT_data", false,-1, 63,0);
    tracep->declBus(c+189,"csr_MPORT_addr", false,-1, 2,0);
    tracep->declBit(c+199,"csr_MPORT_mask", false,-1);
    tracep->declBit(c+199,"csr_MPORT_en", false,-1);
    tracep->declQuad(c+73,"csr_MPORT_2_data", false,-1, 63,0);
    tracep->declBus(c+189,"csr_MPORT_2_addr", false,-1, 2,0);
    tracep->declBit(c+199,"csr_MPORT_2_mask", false,-1);
    tracep->declBit(c+199,"csr_MPORT_2_en", false,-1);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("DPI_EBREAK ");
    tracep->declBus(c+190,"flag", false,-1, 31,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("Registers ");
    tracep->declBit(c+169,"clock", false,-1);
    tracep->declBus(c+198,"io_rs1", false,-1, 4,0);
    tracep->declQuad(c+9,"io_regs_0", false,-1, 63,0);
    tracep->declQuad(c+11,"io_regs_1", false,-1, 63,0);
    tracep->declQuad(c+13,"io_regs_2", false,-1, 63,0);
    tracep->declQuad(c+15,"io_regs_3", false,-1, 63,0);
    tracep->declQuad(c+17,"io_regs_4", false,-1, 63,0);
    tracep->declQuad(c+19,"io_regs_5", false,-1, 63,0);
    tracep->declQuad(c+21,"io_regs_6", false,-1, 63,0);
    tracep->declQuad(c+23,"io_regs_7", false,-1, 63,0);
    tracep->declQuad(c+25,"io_regs_8", false,-1, 63,0);
    tracep->declQuad(c+27,"io_regs_9", false,-1, 63,0);
    tracep->declQuad(c+29,"io_regs_10", false,-1, 63,0);
    tracep->declQuad(c+31,"io_regs_11", false,-1, 63,0);
    tracep->declQuad(c+33,"io_regs_12", false,-1, 63,0);
    tracep->declQuad(c+35,"io_regs_13", false,-1, 63,0);
    tracep->declQuad(c+37,"io_regs_14", false,-1, 63,0);
    tracep->declQuad(c+39,"io_regs_15", false,-1, 63,0);
    tracep->declQuad(c+41,"io_regs_16", false,-1, 63,0);
    tracep->declQuad(c+43,"io_regs_17", false,-1, 63,0);
    tracep->declQuad(c+45,"io_regs_18", false,-1, 63,0);
    tracep->declQuad(c+47,"io_regs_19", false,-1, 63,0);
    tracep->declQuad(c+49,"io_regs_20", false,-1, 63,0);
    tracep->declQuad(c+51,"io_regs_21", false,-1, 63,0);
    tracep->declQuad(c+53,"io_regs_22", false,-1, 63,0);
    tracep->declQuad(c+55,"io_regs_23", false,-1, 63,0);
    tracep->declQuad(c+57,"io_regs_24", false,-1, 63,0);
    tracep->declQuad(c+59,"io_regs_25", false,-1, 63,0);
    tracep->declQuad(c+61,"io_regs_26", false,-1, 63,0);
    tracep->declQuad(c+63,"io_regs_27", false,-1, 63,0);
    tracep->declQuad(c+65,"io_regs_28", false,-1, 63,0);
    tracep->declQuad(c+67,"io_regs_29", false,-1, 63,0);
    tracep->declQuad(c+69,"io_regs_30", false,-1, 63,0);
    tracep->declQuad(c+71,"io_regs_31", false,-1, 63,0);
    for (int i = 0; i < 32; ++i) {
        tracep->declQuad(c+93+i*2,"registers", true,(i+0), 63,0);
    }
    tracep->declBit(c+199,"registers_io_rdata1_MPORT_en", false,-1);
    tracep->declBus(c+198,"registers_io_rdata1_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+9,"registers_io_rdata1_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_rdata2_MPORT_en", false,-1);
    tracep->declBus(c+198,"registers_io_rdata2_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+9,"registers_io_rdata2_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_reg17_MPORT_en", false,-1);
    tracep->declBus(c+200,"registers_io_reg17_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+43,"registers_io_reg17_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_MPORT_1_en", false,-1);
    tracep->declBus(c+198,"registers_MPORT_1_addr", false,-1, 4,0);
    tracep->declQuad(c+9,"registers_MPORT_1_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_0_MPORT_en", false,-1);
    tracep->declBus(c+198,"registers_io_regs_0_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+9,"registers_io_regs_0_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_1_MPORT_en", false,-1);
    tracep->declBus(c+201,"registers_io_regs_1_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+11,"registers_io_regs_1_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_2_MPORT_en", false,-1);
    tracep->declBus(c+202,"registers_io_regs_2_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+13,"registers_io_regs_2_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_3_MPORT_en", false,-1);
    tracep->declBus(c+203,"registers_io_regs_3_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+15,"registers_io_regs_3_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_4_MPORT_en", false,-1);
    tracep->declBus(c+204,"registers_io_regs_4_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+17,"registers_io_regs_4_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_5_MPORT_en", false,-1);
    tracep->declBus(c+205,"registers_io_regs_5_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+19,"registers_io_regs_5_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_6_MPORT_en", false,-1);
    tracep->declBus(c+206,"registers_io_regs_6_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+21,"registers_io_regs_6_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_7_MPORT_en", false,-1);
    tracep->declBus(c+207,"registers_io_regs_7_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+23,"registers_io_regs_7_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_8_MPORT_en", false,-1);
    tracep->declBus(c+208,"registers_io_regs_8_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+25,"registers_io_regs_8_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_9_MPORT_en", false,-1);
    tracep->declBus(c+209,"registers_io_regs_9_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+27,"registers_io_regs_9_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_10_MPORT_en", false,-1);
    tracep->declBus(c+210,"registers_io_regs_10_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+29,"registers_io_regs_10_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_11_MPORT_en", false,-1);
    tracep->declBus(c+211,"registers_io_regs_11_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+31,"registers_io_regs_11_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_12_MPORT_en", false,-1);
    tracep->declBus(c+212,"registers_io_regs_12_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+33,"registers_io_regs_12_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_13_MPORT_en", false,-1);
    tracep->declBus(c+213,"registers_io_regs_13_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+35,"registers_io_regs_13_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_14_MPORT_en", false,-1);
    tracep->declBus(c+214,"registers_io_regs_14_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+37,"registers_io_regs_14_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_15_MPORT_en", false,-1);
    tracep->declBus(c+215,"registers_io_regs_15_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+39,"registers_io_regs_15_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_16_MPORT_en", false,-1);
    tracep->declBus(c+216,"registers_io_regs_16_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+41,"registers_io_regs_16_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_17_MPORT_en", false,-1);
    tracep->declBus(c+200,"registers_io_regs_17_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+43,"registers_io_regs_17_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_18_MPORT_en", false,-1);
    tracep->declBus(c+217,"registers_io_regs_18_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+45,"registers_io_regs_18_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_19_MPORT_en", false,-1);
    tracep->declBus(c+218,"registers_io_regs_19_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+47,"registers_io_regs_19_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_20_MPORT_en", false,-1);
    tracep->declBus(c+219,"registers_io_regs_20_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+49,"registers_io_regs_20_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_21_MPORT_en", false,-1);
    tracep->declBus(c+220,"registers_io_regs_21_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+51,"registers_io_regs_21_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_22_MPORT_en", false,-1);
    tracep->declBus(c+221,"registers_io_regs_22_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+53,"registers_io_regs_22_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_23_MPORT_en", false,-1);
    tracep->declBus(c+222,"registers_io_regs_23_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+55,"registers_io_regs_23_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_24_MPORT_en", false,-1);
    tracep->declBus(c+223,"registers_io_regs_24_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+57,"registers_io_regs_24_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_25_MPORT_en", false,-1);
    tracep->declBus(c+224,"registers_io_regs_25_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+59,"registers_io_regs_25_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_26_MPORT_en", false,-1);
    tracep->declBus(c+225,"registers_io_regs_26_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+61,"registers_io_regs_26_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_27_MPORT_en", false,-1);
    tracep->declBus(c+226,"registers_io_regs_27_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+63,"registers_io_regs_27_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_28_MPORT_en", false,-1);
    tracep->declBus(c+227,"registers_io_regs_28_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+65,"registers_io_regs_28_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_29_MPORT_en", false,-1);
    tracep->declBus(c+228,"registers_io_regs_29_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+67,"registers_io_regs_29_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_30_MPORT_en", false,-1);
    tracep->declBus(c+229,"registers_io_regs_30_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+69,"registers_io_regs_30_MPORT_data", false,-1, 63,0);
    tracep->declBit(c+199,"registers_io_regs_31_MPORT_en", false,-1);
    tracep->declBus(c+230,"registers_io_regs_31_MPORT_addr", false,-1, 4,0);
    tracep->declQuad(c+71,"registers_io_regs_31_MPORT_data", false,-1, 63,0);
    tracep->declQuad(c+9,"registers_MPORT_data", false,-1, 63,0);
    tracep->declBus(c+198,"registers_MPORT_addr", false,-1, 4,0);
    tracep->declBit(c+199,"registers_MPORT_mask", false,-1);
    tracep->declBit(c+199,"registers_MPORT_en", false,-1);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("dpi ");
    tracep->declQuad(c+9,"rf_0", false,-1, 63,0);
    tracep->declQuad(c+11,"rf_1", false,-1, 63,0);
    tracep->declQuad(c+13,"rf_2", false,-1, 63,0);
    tracep->declQuad(c+15,"rf_3", false,-1, 63,0);
    tracep->declQuad(c+17,"rf_4", false,-1, 63,0);
    tracep->declQuad(c+19,"rf_5", false,-1, 63,0);
    tracep->declQuad(c+21,"rf_6", false,-1, 63,0);
    tracep->declQuad(c+23,"rf_7", false,-1, 63,0);
    tracep->declQuad(c+25,"rf_8", false,-1, 63,0);
    tracep->declQuad(c+27,"rf_9", false,-1, 63,0);
    tracep->declQuad(c+29,"rf_10", false,-1, 63,0);
    tracep->declQuad(c+31,"rf_11", false,-1, 63,0);
    tracep->declQuad(c+33,"rf_12", false,-1, 63,0);
    tracep->declQuad(c+35,"rf_13", false,-1, 63,0);
    tracep->declQuad(c+37,"rf_14", false,-1, 63,0);
    tracep->declQuad(c+39,"rf_15", false,-1, 63,0);
    tracep->declQuad(c+41,"rf_16", false,-1, 63,0);
    tracep->declQuad(c+43,"rf_17", false,-1, 63,0);
    tracep->declQuad(c+45,"rf_18", false,-1, 63,0);
    tracep->declQuad(c+47,"rf_19", false,-1, 63,0);
    tracep->declQuad(c+49,"rf_20", false,-1, 63,0);
    tracep->declQuad(c+51,"rf_21", false,-1, 63,0);
    tracep->declQuad(c+53,"rf_22", false,-1, 63,0);
    tracep->declQuad(c+55,"rf_23", false,-1, 63,0);
    tracep->declQuad(c+57,"rf_24", false,-1, 63,0);
    tracep->declQuad(c+59,"rf_25", false,-1, 63,0);
    tracep->declQuad(c+61,"rf_26", false,-1, 63,0);
    tracep->declQuad(c+63,"rf_27", false,-1, 63,0);
    tracep->declQuad(c+65,"rf_28", false,-1, 63,0);
    tracep->declQuad(c+67,"rf_29", false,-1, 63,0);
    tracep->declQuad(c+69,"rf_30", false,-1, 63,0);
    tracep->declQuad(c+71,"rf_31", false,-1, 63,0);
    tracep->declQuad(c+73,"csr_0", false,-1, 63,0);
    tracep->declQuad(c+75,"csr_1", false,-1, 63,0);
    tracep->declQuad(c+77,"csr_2", false,-1, 63,0);
    tracep->declQuad(c+79,"csr_3", false,-1, 63,0);
    tracep->declQuad(c+81,"csr_4", false,-1, 63,0);
    tracep->declQuad(c+185,"inst", false,-1, 63,0);
    tracep->declQuad(c+185,"pc", false,-1, 63,0);
    tracep->declBit(c+187,"eval", false,-1);
    tracep->popNamePrefix(2);
    tracep->pushNamePrefix("ifu ");
    tracep->declBit(c+169,"clock", false,-1);
    tracep->declBit(c+170,"reset", false,-1);
    tracep->declBus(c+171,"io_fd_bus_pc", false,-1, 31,0);
    tracep->declQuad(c+185,"io_br_bus_csr_rdata", false,-1, 63,0);
    tracep->declBit(c+187,"io_br_bus_eval", false,-1);
    tracep->declBit(c+187,"io_br_bus_mret", false,-1);
    tracep->declQuad(c+157,"fs_pc", false,-1, 63,0);
    tracep->declBus(c+159,"seq_pc", false,-1, 31,0);
    tracep->declBus(c+159,"nextpc", false,-1, 31,0);
    tracep->popNamePrefix(1);
    tracep->pushNamePrefix("mem ");
    tracep->declQuad(c+181,"io_data_sram_rdata", false,-1, 63,0);
    tracep->declQuad(c+178,"io_mem_result", false,-1, 63,0);
    tracep->declBus(c+189,"io_ld_type", false,-1, 2,0);
    tracep->popNamePrefix(2);
}

VL_ATTR_COLD void VTop___024root__trace_init_top(VTop___024root* vlSelf, VerilatedVcd* tracep) {
    if (false && vlSelf) {}  // Prevent unused
    VTop__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+    VTop___024root__trace_init_top\n"); );
    // Body
    VTop___024root__trace_init_sub__TOP__0(vlSelf, tracep);
}

VL_ATTR_COLD void VTop___024root__trace_full_top_0(void* voidSelf, VerilatedVcd::Buffer* bufp);
void VTop___024root__trace_chg_top_0(void* voidSelf, VerilatedVcd::Buffer* bufp);
void VTop___024root__trace_cleanup(void* voidSelf, VerilatedVcd* /*unused*/);

VL_ATTR_COLD void VTop___024root__trace_register(VTop___024root* vlSelf, VerilatedVcd* tracep) {
    if (false && vlSelf) {}  // Prevent unused
    VTop__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+    VTop___024root__trace_register\n"); );
    // Body
    tracep->addFullCb(&VTop___024root__trace_full_top_0, vlSelf);
    tracep->addChgCb(&VTop___024root__trace_chg_top_0, vlSelf);
    tracep->addCleanupCb(&VTop___024root__trace_cleanup, vlSelf);
}

VL_ATTR_COLD void VTop___024root__trace_full_sub_0(VTop___024root* vlSelf, VerilatedVcd::Buffer* bufp);

VL_ATTR_COLD void VTop___024root__trace_full_top_0(void* voidSelf, VerilatedVcd::Buffer* bufp) {
    VL_DEBUG_IF(VL_DBG_MSGF("+    VTop___024root__trace_full_top_0\n"); );
    // Init
    VTop___024root* const __restrict vlSelf VL_ATTR_UNUSED = static_cast<VTop___024root*>(voidSelf);
    VTop__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    // Body
    VTop___024root__trace_full_sub_0((&vlSymsp->TOP), bufp);
}

VL_ATTR_COLD void VTop___024root__trace_full_sub_0(VTop___024root* vlSelf, VerilatedVcd::Buffer* bufp) {
    if (false && vlSelf) {}  // Prevent unused
    VTop__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+    VTop___024root__trace_full_sub_0\n"); );
    // Init
    uint32_t* const oldp VL_ATTR_UNUSED = bufp->oldp(vlSymsp->__Vm_baseCode);
    // Body
    bufp->fullBit(oldp+1,((1U == (IData)(vlSelf->Top__DOT__axi__DOT__rstate))));
    bufp->fullBit(oldp+2,((2U == (IData)(vlSelf->Top__DOT__axi__DOT__rstate))));
    bufp->fullBit(oldp+3,((1U == (IData)(vlSelf->Top__DOT__axi__DOT__wstate))));
    bufp->fullBit(oldp+4,((2U == (IData)(vlSelf->Top__DOT__axi__DOT__wstate))));
    bufp->fullBit(oldp+5,((3U == (IData)(vlSelf->Top__DOT__axi__DOT__wstate))));
    bufp->fullCData(oldp+6,(vlSelf->Top__DOT__axi__DOT__rstate),2);
    bufp->fullCData(oldp+7,(vlSelf->Top__DOT__axi__DOT__wstate),2);
    bufp->fullBit(oldp+8,((0U == (IData)(vlSelf->Top__DOT__axi__DOT__wstate))));
    bufp->fullQData(oldp+9,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                            [0U]),64);
    bufp->fullQData(oldp+11,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [1U]),64);
    bufp->fullQData(oldp+13,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [2U]),64);
    bufp->fullQData(oldp+15,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [3U]),64);
    bufp->fullQData(oldp+17,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [4U]),64);
    bufp->fullQData(oldp+19,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [5U]),64);
    bufp->fullQData(oldp+21,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [6U]),64);
    bufp->fullQData(oldp+23,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [7U]),64);
    bufp->fullQData(oldp+25,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [8U]),64);
    bufp->fullQData(oldp+27,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [9U]),64);
    bufp->fullQData(oldp+29,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0xaU]),64);
    bufp->fullQData(oldp+31,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0xbU]),64);
    bufp->fullQData(oldp+33,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0xcU]),64);
    bufp->fullQData(oldp+35,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0xdU]),64);
    bufp->fullQData(oldp+37,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0xeU]),64);
    bufp->fullQData(oldp+39,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0xfU]),64);
    bufp->fullQData(oldp+41,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0x10U]),64);
    bufp->fullQData(oldp+43,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0x11U]),64);
    bufp->fullQData(oldp+45,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0x12U]),64);
    bufp->fullQData(oldp+47,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0x13U]),64);
    bufp->fullQData(oldp+49,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0x14U]),64);
    bufp->fullQData(oldp+51,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0x15U]),64);
    bufp->fullQData(oldp+53,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0x16U]),64);
    bufp->fullQData(oldp+55,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0x17U]),64);
    bufp->fullQData(oldp+57,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0x18U]),64);
    bufp->fullQData(oldp+59,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0x19U]),64);
    bufp->fullQData(oldp+61,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0x1aU]),64);
    bufp->fullQData(oldp+63,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0x1bU]),64);
    bufp->fullQData(oldp+65,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0x1cU]),64);
    bufp->fullQData(oldp+67,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0x1dU]),64);
    bufp->fullQData(oldp+69,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0x1eU]),64);
    bufp->fullQData(oldp+71,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers
                             [0x1fU]),64);
    bufp->fullQData(oldp+73,(vlSelf->Top__DOT__idu__DOT__CSR__DOT__csr
                             [0U]),64);
    bufp->fullQData(oldp+75,(vlSelf->Top__DOT__idu__DOT__CSR__DOT__csr
                             [1U]),64);
    bufp->fullQData(oldp+77,(vlSelf->Top__DOT__idu__DOT__CSR__DOT__csr
                             [2U]),64);
    bufp->fullQData(oldp+79,(vlSelf->Top__DOT__idu__DOT__CSR__DOT__csr
                             [3U]),64);
    bufp->fullQData(oldp+81,(vlSelf->Top__DOT__idu__DOT__CSR__DOT__csr
                             [4U]),64);
    bufp->fullQData(oldp+83,(vlSelf->Top__DOT__idu__DOT__CSR__DOT__csr[0]),64);
    bufp->fullQData(oldp+85,(vlSelf->Top__DOT__idu__DOT__CSR__DOT__csr[1]),64);
    bufp->fullQData(oldp+87,(vlSelf->Top__DOT__idu__DOT__CSR__DOT__csr[2]),64);
    bufp->fullQData(oldp+89,(vlSelf->Top__DOT__idu__DOT__CSR__DOT__csr[3]),64);
    bufp->fullQData(oldp+91,(vlSelf->Top__DOT__idu__DOT__CSR__DOT__csr[4]),64);
    bufp->fullQData(oldp+93,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[0]),64);
    bufp->fullQData(oldp+95,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[1]),64);
    bufp->fullQData(oldp+97,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[2]),64);
    bufp->fullQData(oldp+99,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[3]),64);
    bufp->fullQData(oldp+101,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[4]),64);
    bufp->fullQData(oldp+103,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[5]),64);
    bufp->fullQData(oldp+105,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[6]),64);
    bufp->fullQData(oldp+107,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[7]),64);
    bufp->fullQData(oldp+109,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[8]),64);
    bufp->fullQData(oldp+111,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[9]),64);
    bufp->fullQData(oldp+113,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[10]),64);
    bufp->fullQData(oldp+115,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[11]),64);
    bufp->fullQData(oldp+117,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[12]),64);
    bufp->fullQData(oldp+119,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[13]),64);
    bufp->fullQData(oldp+121,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[14]),64);
    bufp->fullQData(oldp+123,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[15]),64);
    bufp->fullQData(oldp+125,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[16]),64);
    bufp->fullQData(oldp+127,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[17]),64);
    bufp->fullQData(oldp+129,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[18]),64);
    bufp->fullQData(oldp+131,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[19]),64);
    bufp->fullQData(oldp+133,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[20]),64);
    bufp->fullQData(oldp+135,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[21]),64);
    bufp->fullQData(oldp+137,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[22]),64);
    bufp->fullQData(oldp+139,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[23]),64);
    bufp->fullQData(oldp+141,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[24]),64);
    bufp->fullQData(oldp+143,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[25]),64);
    bufp->fullQData(oldp+145,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[26]),64);
    bufp->fullQData(oldp+147,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[27]),64);
    bufp->fullQData(oldp+149,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[28]),64);
    bufp->fullQData(oldp+151,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[29]),64);
    bufp->fullQData(oldp+153,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[30]),64);
    bufp->fullQData(oldp+155,(vlSelf->Top__DOT__idu__DOT__Registers__DOT__registers[31]),64);
    bufp->fullQData(oldp+157,(vlSelf->Top__DOT__ifu__DOT__fs_pc),64);
    bufp->fullIData(oldp+159,(((IData)(4U) + (IData)(vlSelf->Top__DOT__ifu__DOT__fs_pc))),32);
    bufp->fullBit(oldp+160,((2U == (IData)(vlSelf->Top__DOT__axi_mem__DOT__read_state))));
    bufp->fullBit(oldp+161,((3U == (IData)(vlSelf->Top__DOT__axi_mem__DOT__read_state))));
    bufp->fullBit(oldp+162,((2U == (IData)(vlSelf->Top__DOT__axi_mem__DOT__write_state))));
    bufp->fullBit(oldp+163,((4U == (IData)(vlSelf->Top__DOT__axi_mem__DOT__write_state))));
    bufp->fullCData(oldp+164,(vlSelf->Top__DOT__axi_mem__DOT__read_state),3);
    bufp->fullBit(oldp+165,((1U == (IData)(vlSelf->Top__DOT__axi_mem__DOT__read_state))));
    bufp->fullCData(oldp+166,(vlSelf->Top__DOT__axi_mem__DOT__write_state),3);
    bufp->fullBit(oldp+167,((1U == (IData)(vlSelf->Top__DOT__axi_mem__DOT__write_state))));
    bufp->fullBit(oldp+168,((3U == (IData)(vlSelf->Top__DOT__axi_mem__DOT__write_state))));
    bufp->fullBit(oldp+169,(vlSelf->clock));
    bufp->fullBit(oldp+170,(vlSelf->reset));
    bufp->fullIData(oldp+171,(vlSelf->io_fs_pc),32);
    bufp->fullCData(oldp+172,(vlSelf->io_op),7);
    bufp->fullBit(oldp+173,(vlSelf->io_in_WB));
    bufp->fullIData(oldp+174,(vlSelf->io_wb_pc),32);
    bufp->fullIData(oldp+175,(vlSelf->io_wb_inst),32);
    bufp->fullIData(oldp+176,(vlSelf->io_ds_pc),32);
    bufp->fullBit(oldp+177,(vlSelf->io_clock));
    bufp->fullQData(oldp+178,(vlSelf->io_mem_result),64);
    bufp->fullCData(oldp+180,(vlSelf->io_ld_type),3);
    bufp->fullQData(oldp+181,(vlSelf->Top__DOT__axi_mem_rdata),64);
    bufp->fullCData(oldp+183,(vlSelf->Top__DOT__axi_mem__DOT__read_next_state),3);
    bufp->fullCData(oldp+184,(vlSelf->Top__DOT__axi_mem__DOT__write_next_state),3);
    bufp->fullQData(oldp+185,(0ULL),64);
    bufp->fullBit(oldp+187,(0U));
    bufp->fullCData(oldp+188,(0xffU),8);
    bufp->fullCData(oldp+189,(0U),3);
    bufp->fullIData(oldp+190,(0U),32);
    bufp->fullCData(oldp+191,(2U),4);
    bufp->fullCData(oldp+192,(1U),4);
    bufp->fullCData(oldp+193,(0U),8);
    bufp->fullCData(oldp+194,(1U),3);
    bufp->fullCData(oldp+195,(2U),3);
    bufp->fullCData(oldp+196,(3U),3);
    bufp->fullCData(oldp+197,(4U),3);
    bufp->fullCData(oldp+198,(0U),5);
    bufp->fullBit(oldp+199,(1U));
    bufp->fullCData(oldp+200,(0x11U),5);
    bufp->fullCData(oldp+201,(1U),5);
    bufp->fullCData(oldp+202,(2U),5);
    bufp->fullCData(oldp+203,(3U),5);
    bufp->fullCData(oldp+204,(4U),5);
    bufp->fullCData(oldp+205,(5U),5);
    bufp->fullCData(oldp+206,(6U),5);
    bufp->fullCData(oldp+207,(7U),5);
    bufp->fullCData(oldp+208,(8U),5);
    bufp->fullCData(oldp+209,(9U),5);
    bufp->fullCData(oldp+210,(0xaU),5);
    bufp->fullCData(oldp+211,(0xbU),5);
    bufp->fullCData(oldp+212,(0xcU),5);
    bufp->fullCData(oldp+213,(0xdU),5);
    bufp->fullCData(oldp+214,(0xeU),5);
    bufp->fullCData(oldp+215,(0xfU),5);
    bufp->fullCData(oldp+216,(0x10U),5);
    bufp->fullCData(oldp+217,(0x12U),5);
    bufp->fullCData(oldp+218,(0x13U),5);
    bufp->fullCData(oldp+219,(0x14U),5);
    bufp->fullCData(oldp+220,(0x15U),5);
    bufp->fullCData(oldp+221,(0x16U),5);
    bufp->fullCData(oldp+222,(0x17U),5);
    bufp->fullCData(oldp+223,(0x18U),5);
    bufp->fullCData(oldp+224,(0x19U),5);
    bufp->fullCData(oldp+225,(0x1aU),5);
    bufp->fullCData(oldp+226,(0x1bU),5);
    bufp->fullCData(oldp+227,(0x1cU),5);
    bufp->fullCData(oldp+228,(0x1dU),5);
    bufp->fullCData(oldp+229,(0x1eU),5);
    bufp->fullCData(oldp+230,(0x1fU),5);
}
